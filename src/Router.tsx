
/// <reference path="../global.d.ts" />
import React, { JSX } from "react";
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import fileRoutes from 'virtual:file-routes';

/**
 * RouteObject interface used for recursive route rendering.
 */
interface RouteObject {
  path: string;
  element: React.ReactNode;
  children?: RouteObject[];
}

/**
 * Recursively renders route objects as <Route> components.
 */
function renderRoutes(routes: RouteObject[]): JSX.Element[] {
  return routes.map((route, idx) => (
    <Route key={`${route.path}-${idx}`} path={route.path} element={route.element}>
      {route.children ? renderRoutes(route.children) : null}
    </Route>
  ));
}

/**
 * Auto-generated Router Component.
 */
const AutoGeneratedRouter: React.FC = () => {
  return (
    <BrowserRouter>
      <Routes>
        {renderRoutes(fileRoutes)}
      </Routes>
    </BrowserRouter>
  );
};

export default AutoGeneratedRouter;
