const fs = require("fs");
const path = require("path");

function copyFileIfNotExists(srcFile, destFile) {
  if (!fs.existsSync(destFile)) {
    fs.copyFileSync(srcFile, destFile);
    console.log(
      `[vite-plugin-file-router] Copied ${path.basename(
        srcFile
      )} to ${destFile}`
    );
  } else {
    console.log(
      `[vite-plugin-file-router] ${path.basename(
        destFile
      )} already exists. Skipping copy.`
    );
  }
}

function main() {
  const projectRoot = process.cwd();
  const srcDir = path.join(projectRoot, "src");

  if (!fs.existsSync(srcDir)) {
    fs.mkdirSync(srcDir, { recursive: true });
  }

  // Create Router.tsx if it does not exist.
  const routerFile = path.join(srcDir, "Router.tsx");
  if (!fs.existsSync(routerFile)) {
    const routerTemplate = `import React, { JSX } from 'react';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import autoRoutes from './autoRoutes';

/**
 * Recursively renders routes.
 */
interface RouteObject {
  path: string;
  element: React.ReactNode;
  children?: RouteObject[];
}

function renderRoutes(routes: RouteObject[]): JSX.Element[] {
  return routes.map((route, idx) => (
    <Route key={\`\${route.path}-\${idx}\`} path={route.path} element={route.element}>
      {route.children ? renderRoutes(route.children) : null}
    </Route>
  ));
}

const AutoGeneratedRouter: React.FC = () => {
  return (
    <BrowserRouter>
      <Routes>
        {renderRoutes(autoRoutes)}
      </Routes>
    </BrowserRouter>
  );
};

export default AutoGeneratedRouter;
`;
    fs.writeFileSync(routerFile, routerTemplate, "utf-8");
    console.log("[vite-plugin-file-router] Created src/Router.tsx");
  } else {
    console.log(
      "[vite-plugin-file-router] src/Router.tsx already exists. Skipping."
    );
  }

  // Generate autoRoutes.ts from plugin data.
  const autoRoutesContent = `// This file is auto-generated by vite-plugin-file-router.
export default [
  {
    path: '/',
    element: (
      <React.Suspense fallback={<div>Loading...</div>}>
        {/* Home component */}
      </React.Suspense>
    )
  },
  {
    path: 'about',
    element: (
      <React.Suspense fallback={<div>Loading...</div>}>
        {/* About component */}
      </React.Suspense>
    )
  }
];
`;
  const autoRoutesFile = path.join(srcDir, "autoRoutes.ts");
  fs.writeFileSync(autoRoutesFile, autoRoutesContent, "utf-8");
  console.log("[vite-plugin-file-router] Created src/autoRoutes.ts");
}

main();
